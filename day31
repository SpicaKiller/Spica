455. 分发饼干
class Solution {
public:
    int findContentChildren(vector<int>& g, vector<int>& s) {
        sort(g.begin(), g.end());
        sort(s.begin(),s.end());
        int index = s.size() - 1;
        int res = 0;
        for(int i = g.size() - 1;i >= 0; i--){
            if(index >= 0 && s[index] >= g[i]){
                index--;
                res++;
            }
        }
        return res;
    }
};

376. 摆动序列
class Solution {
public:
    int wiggleMaxLength(vector<int>& nums) {
        if(nums.size() <= 1) return nums.size();
        int curDiff = 0;
        int preDiff = 0;
        int res = 1;
        for(int i = 0; i < nums.size() - 1; i++){
            curDiff = nums[i + 1] - nums[i];
            if((preDiff <= 0 && curDiff > 0) || (preDiff >= 0 && curDiff < 0)){
                res++;
                preDiff = curDiff;
            }
        }
        return res;
    }
};

53. 最大子数组和
class Solution {
public:
    int maxSubArray(vector<int>& nums) {
        int res = INT32_MIN;
        int count = 0;
        for(int i = 0; i < nums.size(); i++){
            count += nums[i];
            if(count > res){
                res = count;
            }
            if(count <= 0) {
                count = 0;
            }
        }
        return res;
    }
};
