二分的两种写法：
一: 左闭右开
class Solution {
public:
    int search(vector<int>& nums, int target) {
     int left = 0;
     int right = nums.size();
     while(left < right){
          int middle = left + ((right - left) >> 1)；
          if(nums[middle] > target){
              right = middle;
          }
          else if(nums[middle] < target){
              left = middle + 1;
          }else{
              return middle;
          }
       }
     return -1;
    }
};

二: 左闭右闭
class Solution {
public:
    int search(vector<int>& nums, int target) {
     int left = 0;
     int right = nums.size();
     while(left <= right){
          int middle = left + ((right - left) >> 1)；
          if(nums[middle] > target){
              right = middle - 1;
          }
          else if(nums[middle] < target){
              left = middle + 1;
          }else{
              return middle;
          }
       }
     return -1;
    }
};

三：移除元素（暴力）：
class Solution {
public:
    int removeElement(vector<int>& nums, int val) {
    int size = nums.size();
    for(int i = 0; i < size; i++){
        if(nums[i] == val){
            for(int j = i + 1; j < size; j++){
                nums[j - 1] = nums[j];
            }
            i--;
            size--;
        }
    }
    return size;
    }
};

四：移除元素（双指针）

class Solution {
public:
    int removeElement(vector<int>& nums, int val) {
    int slow = 0;
    for(int fast = 0; i < nums.size(); fast++){
        if(nums[fast] != val){
            nums[slow++] = nums[fast];
        }
    }
    return slow;
    }
};
