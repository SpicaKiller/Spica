503. 下一个更大元素 II
class Solution {
public:
    vector<int> nextGreaterElements(vector<int>& nums) {
        vector<int> nums1(nums.begin(), nums.end());
        nums.insert(nums.end(), nums1.begin(), nums1.end());
        vector<int> res(nums.size(), - 1);
        if(nums.size() == 0) return res;

        stack<int> st;
        st.push(0);
        for(int i = 1; i < nums.size(); i++){
            if(nums[i] < nums[st.top()]) st.push(i);
            else if(nums[i] == nums[st.top()]) st.push(i);
            else{
                while(!st.empty() && nums[i] > nums[st.top()]){
                    res[st.top()] = nums[i];
                    st.pop();
                }
                st.push(i);
            }
        }
        res.resize(nums.size() / 2);
        return res;
    }
};

42. 接雨水
class Solution {
public:
    int trap(vector<int>& height) {
if (height.size() <= 2) return 0; // 可以不加
        stack<int> st; 
        st.push(0);
        int sum = 0;
        for (int i = 1; i < height.size(); i++) {
            if (height[i] < height[st.top()]) {     
                st.push(i);
            } if (height[i] == height[st.top()]) {  
                st.pop(); 
                st.push(i);
            } else {                                
                while (!st.empty() && height[i] > height[st.top()]) { 
                    int mid = st.top();
                    st.pop();
                    if (!st.empty()) {
                        int h = min(height[st.top()], height[i]) - height[mid];
                        int w = i - st.top() - 1; 
                        sum += h * w;
                    }
                }
                st.push(i);
            }
        }
        return sum;
    
    }
};
