122. 买卖股票的最佳时机 II
class Solution {
public:
    int maxProfit(vector<int>& prices) {
        int res = 0;
        for(int i = 1; i < prices.size(); i++){
            res += max(prices[i] - prices[i - 1], 0);
        }
        return res;
    }
};

55. 跳跃游戏
class Solution {
public:
    bool canJump(vector<int>& nums) {
        int cover = 0;
        if(nums.size() == 1) return true;
        for(int i = 0; i <= cover; i++){
            cover = max(i + nums[i], cover);
            if(cover >= nums.size() - 1) 
              return true;
        }
        return false;
    }
};

45. 跳跃游戏 II
class Solution {
public:
    int jump(vector<int>& nums) {
        if(nums.size() == 1) return 0;
        int curDistance = 0;
        int nextDistance = 0;
        int res = 0;
        for(int i = 0; i < nums.size(); i++){
            nextDistance = max(i + nums[i] , nextDistance);
            if(i == curDistance){
                if(curDistance < nums.size()){
                    res++;
                    curDistance = nextDistance;
                    if(nextDistance >= nums.size() - 1) break;
                }else break;
            }
        }
        return res;
    }
};
